LAFI 24 Paper #16 Reviews and Comments
===========================================================================
Paper #16 A Tree Sampler for Bounded Context-Free Languages


Review #16A
===========================================================================

Overall merit
-------------
2. Accept

Comments
--------
#### Summary

This abstract presents a method for sampling strings from a context-free grammar.

#### Assessment

This is a very weak accept. The material is certainly relevant for the workshop, but the abstract makes for a very hard and very dense read. Not only is it dense, one has to partly guess. For example, you speak of the fixpoint $M_\infty = M + M^2$ but right- and left-hand-side share no common variable. Did you mean $M = M + M^2$? As another example, Definition 1.1 comes with no intuition whatsoever. The reader has to tediously think that up and the notation-heaviness of the definition does not make this task very easy.

For a presentation, I would recommend coming up with lots and lots of intuitions and assuming less familiarity with the notation.



Review #16B
===========================================================================

Overall merit
-------------
2. Accept

Comments
--------
This work solves a problem that may be of interest to LAFI attendees: given a string with holes, sample the set of parse trees generated by filling in the holes uniformly at random with terminals. I am not sure what applications solving this problem would enable, but it could potentially be interesting.

I understood the authors' approach at a high-level. They have a new data structure for representing the total set of parse trees for all possible completions. This data structure can be sampled directly for sampling with replacement, and can also generate a mapping from integers to trees that can be used for sampling without replacement.

One of the main things that is missing from the current presentation is a proof that this sampler indeed samples from the right distribution. There is potentially an opportunity for an incorrect data structure to introduce non-uniformities into the sampling process.

Also, I was not able to understand any details of the approach due to an extreme lack of detail and a copious amount of undefined terminology. For example:

* The fixed-point $M_\infty$. It is currently defined as equal to $M + M^2$, where $M$ is not defined anywhere. I don't understand in what sense $M_\infty$ is a fixed point. Maybe the authors meant that $M_\infty$ is the (least?) fixed point of $f(M) = M + M^2$?

* What is $\Lambda$?

* What is the $\oplus$ notation used in the definition of $X \otimes Z$? Is it disjoint union / sum-type constructor? If so, it doesn't type check, because it is indexed by a $P$, whereas the index type of $\mathbb{T}_3$ is either a $V$ or a $\Sigma$.

* What is $\mathbb{T}$?

* How do you tell if $T$ is a root or a child in $\Gamma$?

* Why is the recurrence in 2.2 relevant?

Also, the example has a large number of elisions, which makes it hard to understand. I suggest the authors include a full, self-contained example in the final version of this work.



Review #16C
===========================================================================

Overall merit
-------------
2. Accept

Comments
--------
The authors introduce a simple and efficient method for sampling trees with and without replacement from bounded context-free languages (BCFLs). They represent candidate parse trees using an algebraic datatype, enabling straightforward tree sampling by uniformly selecting integers without replacement from a finite range. This technique is applicable to both finite and infinite CFLs, regardless of ambiguity or production ordering.

Key Contributions

- Development of a novel algorithm for sampling trees in bounded context-free languages
- Efficient tree sampling with and without replacement
- Applicability to both finite and infinite CFLs, regardless of ambiguity or production ordering
- Potential applications in code completion and program repair



Review #16D
===========================================================================

Overall merit
-------------
2. Accept

Comments
--------
We encourage the authors to consider the LAFI audience during their presentation. This audience is generally quite interested in sampling, but it would be most useful to see connections to probabilistic modeling and programming, and what kinds of new applications this approach might enable.